import logging
from aiogram import Bot , Dispatcher ,executor , types
from aiogram.types import ReplyKeyboardMarkup , KeyboardButton
import random
import markups as nav
import datetime
from datetime import date
x = datetime.datetime.now()
x1 = x.strftime("%u")
m = x.strftime("%M")
h = x.strftime("%H")
print(x)
print(x1)

TOKEN = ""

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç {0.first_name}'.format(message.from_user), reply_markup= nav.mainMenu)

@dp.message_handler()
async def command_start(message: types.Message):
    if message.text == "üîó–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await bot.send_message(message.from_user.id,"üîó–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" ,reply_markup= nav.mainMenu)
    elif message.text == "üîÆ–î—Ä—É–≥–∏–µ —Å–æ—Ü.—Å–µ—Ç–∏":
        await bot.send_message(message.from_user.id, "instagram - https://www.instagram.com/jaiqschool/\ntiktok - https://www.tiktok.com/@jaiq.school?lang=ru-RU\n telegram - https://t.me/jaiqschool")
    elif message.text == "üìö–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        await bot.send_message(message.from_user.id, "JaiqSchool - —ç—Ç–æ —à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–æ–±–æ—Ç–∞—Ç–µ—Ö–Ω–∏–∫–∏")
    elif message.text == "üî•–ö—É—Ä—Å—ã":
        await bot.send_message(message.from_user.id,reply_markup= nav.otherMenu)
    elif message.text == "üí∞–¶–µ–Ω—ã":
        await bot.send_message(message.from_user.id, "–ö—É—Ä—Å —Ä–∞–±–æ—Ç–∞—Ç–µ—Ö–Ω–∏–∫–∏ - —Ü–µ–Ω–∞\n–ö—É—Ä—Å –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è - —Ü–µ–Ω–∞\n–ö—É—Ä—Å –≤–µ–± –¥–∏–∑–∞–π–Ω–∞ - —Ü–µ–Ω–∞")
    elif message.text == "SyatovAmir11":
        await bot.send_message(message.from_user.id, "")
    elif x1 == 5 and h == 15 and m == 30:
         await bot.send_message(message.from_user.id, "—á–µ—Ä–µ–∑ 2 —Å –ø–æ–ª–æ–≤–∏–Ω–æ–π —á–∞—Å–∞ –º—É–≤–∏ —Ç–∞–π–º")
    else :
        await message.reply("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
